# Railway-optimized Dockerfile for JobTrack
FROM node:20-alpine

# Set working directory
WORKDIR /app

# Install Python and pip for ML service
RUN apk add --no-cache python3 py3-pip

# Copy package files
COPY backend/package*.json ./
COPY package*.json ./

# Install Node.js dependencies
RUN npm ci --only=production

# Copy backend source code
COPY backend/ ./

# Copy Python requirements and install
COPY requirements.txt ./
RUN pip install --no-cache-dir -r requirements.txt

# Copy Python app
COPY app.py ./
COPY *.pkl ./

# Create data directories
RUN mkdir -p data export config services routes

# Create non-root user for security
RUN addgroup -g 1001 -S nodejs
RUN adduser -S jobtrack -u 1001

# Change ownership of the app directory
RUN chown -R jobtrack:nodejs /app
USER jobtrack

# Expose port
EXPOSE 3000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
  CMD node -e "require('http').get('http://localhost:' + (process.env.PORT || 3000) + '/health', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"

# Start server
CMD ["node", "server.js"]
